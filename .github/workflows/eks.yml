name: kubernetes

on:
  workflow_call:
    inputs:
      image_uri:
        description: 'A URI completa da imagem a ser implementada.'
        required: true
        type: string

jobs:

  EKS:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform -chdir=infra init

      - name: Terraform Plan
        run: terraform -chdir=infra plan

      - name: Terraform Apply
        run: terraform -chdir=infra apply -auto-approve

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region us-east-1 --name baitersburger-cluster

      - name: Deploy k8s
        run: |
          sed -i 's|000000000000.dkr.ecr.us-east-1.amazonaws.com/baitersburger:placeholder|${{ inputs.image_uri }}|' k8s/app-deployment.yaml
          
          kubectl apply -f k8s/namespace.yaml
          
          kubectl create secret generic atlas-connection-secret \
            --namespace=baitersburger \
            --from-literal=connectionString="${{secrets.MONGO_URI}}" \
            --dry-run=client -o yaml | kubectl apply -f -
          
          kubectl create secret generic mercado-pago-secret \
            --namespace=baitersburger \
            --from-literal=accessToken="${{secrets.MERCADO_PAGO_ACCESS_TOKEN}}" \
            --dry-run=client -o yaml | kubectl apply -f -
          
          kubectl apply -f k8s/ --namespace=baitersburger
          
          kubectl rollout status deployment/baitersburger-app --namespace=baitersburger --timeout=5m